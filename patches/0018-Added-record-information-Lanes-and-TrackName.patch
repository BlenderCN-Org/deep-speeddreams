From 317f5270da55818cceb33386682e552d54550d2e Mon Sep 17 00:00:00 2001
From: Andre Netzeband <andre.netzeband@hm.edu>
Date: Wed, 17 May 2017 14:34:49 +0200
Subject: [PATCH] Added record information "Lanes" and "TrackName".

---
 python/speed_dreams/data_types.py            |  9 +++++++++
 src/modules/graphic/ssggraph/CRecordCam.cpp  | 21 +++++++++++++++++++++
 src/modules/graphic/ssggraph/CSharedMemroy.h |  7 +++++++
 3 files changed, 37 insertions(+)

diff --git a/python/speed_dreams/data_types.py b/python/speed_dreams/data_types.py
index dc6ca5e..a8e7f50 100644
--- a/python/speed_dreams/data_types.py
+++ b/python/speed_dreams/data_types.py
@@ -3,6 +3,7 @@ import ctypes
 RECORD_MAX_IMAGE_HEIGHT=1440
 RECORD_MAX_IMAGE_WIDTH=2560
 RECORD_IMAGE_CHANNELS=3
+MAX_TRACK_NAME_LENGTH=256
 RECORD_MEMORY_NAME="DeepDrivingMemory"
 
 class Sync_t(ctypes.Structure):
@@ -74,11 +75,19 @@ class Labels_t(ctypes.Structure):
 class Game_t(ctypes.Structure):
   _fields_ = [
     ('Speed', ctypes.c_float),
+    ('Lanes', ctypes.c_uint8),
+    ('TrackNameArray', ctypes.c_char * MAX_TRACK_NAME_LENGTH)
   ]
 
+  @property
+  def TrackName(self):
+    return self.TrackNameArray.decode("ascii")
+
   def __str__(self):
     String = ""
     String += "Speed={}\n".format(self.Speed)
+    String += "Lanes={}\n".format(self.Lanes)
+    String += "TrackName={}\n".format(self.TrackName)
     return String
 
 
diff --git a/src/modules/graphic/ssggraph/CRecordCam.cpp b/src/modules/graphic/ssggraph/CRecordCam.cpp
index c2f94fa..78da4c2 100644
--- a/src/modules/graphic/ssggraph/CRecordCam.cpp
+++ b/src/modules/graphic/ssggraph/CRecordCam.cpp
@@ -27,11 +27,13 @@
  *
  */
 
+#include <car.h>
 #include "grcam.h"
 #include "grmain.h"
 #include "grscreen.h"	//cGrScreen
 
 #include "CSharedMemroy.h"
+#include "grscene.h"
 
 CRecordCam::CRecordCam(cGrScreen * pMyScreen,
                              int ID,
@@ -56,6 +58,7 @@ CRecordCam::CRecordCam(cGrScreen * pMyScreen,
   mpSharedMemory = new CSharedMemory();
 
   memset(&LabelData, 0, sizeof(LabelData));
+  memset(&GameData, 0, sizeof(GameData));
 }
 
 CRecordCam::~CRecordCam()
@@ -93,6 +96,24 @@ void CRecordCam::update(tCarElt *pCar, tSituation *pSituation)
   GameData.Speed = (pCar->_speed_x * 3.6f);
 
   Speed = (int)GameData.Speed;
+
+  if (grTrack)
+  {
+    assert(grTrack->lanes >= 0);
+    assert(grTrack->lanes <= 0xFF);
+
+    GameData.Lanes = (uint8_t)grTrack->lanes;
+    if (GameData.TrackName[0] == 0)
+    {
+      snprintf(GameData.TrackName, (size_t)MAX_TRACK_NAME_LENGTH, "%s", grTrack->name);
+      GameData.TrackName[MAX_TRACK_NAME_LENGTH-1] = 0;
+    }
+  }
+  else
+  {
+    GameData.Lanes = 0;
+    GameData.TrackName[0] = 0;
+  }
 }
 
 void CRecordCam::storeImage(int X, int Y, int Height, int Width)
diff --git a/src/modules/graphic/ssggraph/CSharedMemroy.h b/src/modules/graphic/ssggraph/CSharedMemroy.h
index fabd68c..b58e961 100644
--- a/src/modules/graphic/ssggraph/CSharedMemroy.h
+++ b/src/modules/graphic/ssggraph/CSharedMemroy.h
@@ -46,6 +46,7 @@ typedef boost::interprocess::mapped_region Region_t;
 #define RECORD_MAX_IMAGE_WIDTH 2560
 #define RECORD_MAX_IMAGE_HEIGHT 1440
 #define RECORD_IMAGE_CHANNELS 3
+#define MAX_TRACK_NAME_LENGTH 256
 
 /// @brief Contains the image.
 typedef struct
@@ -146,6 +147,12 @@ typedef struct
 {
   /// @brief The current speed of the car. The value is given in km/h.
   float Speed;
+
+  /// @brief The number of lanes for the current track. This value is 0, if the number of lanes is unknown.
+  uint8_t Lanes;
+
+  /// @brief The name of the current track. If the name is too long (longer than 256 characters, the name is truncated).
+  char TrackName[MAX_TRACK_NAME_LENGTH];
 } Game_t;
 
 
-- 
2.11.1.windows.1

